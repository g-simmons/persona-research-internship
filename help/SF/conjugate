`SF/text/conjugate` := TEXT(
`   `,
`FUNCTION:  conjugate - conjugate a partition`,
`   `,
`CALLING SEQUENCE:  conjugate(lambda);`,
`   `,
`PARAMETERS:  lambda = a partition`,
`   `,
`SYNOPSIS:`,
`  The conjugate of a partition lambda is the partition whose i-th part is`,
`  the number of parts of lambda that are >=i. This amounts to reflecting`,
`  the diagram of lambda across the main diagonal.`,
`   `,
`EXAMPLES: `,
`  conjugate([7,7,3,2,2,2,1]);       yields       [7, 6, 3, 2, 2, 2, 2]`,
`   `,
`SEE ALSO:  Par, dominate, nextPar, subPar`,
NULL):

if `+`(0)=0 then # Maple V.4 or later
  print(INTERFACE_HELP(insert, topic=`SF/conjugate`,
  helpfile=HomeLib, text=`SF/text/conjugate`))
elif ceil(0)=0 then # Maple V.2 or V.3
  `help/SF/text/conjugate`:=`SF/text/conjugate`:
  save `help/SF/text/conjugate`, cat(HomeLib,`/help/SF/text/conjugate.m`);
fi:
