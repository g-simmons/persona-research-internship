`SF/text/itensor` := TEXT(
`   `,
`FUNCTION:  itensor - inner tensor product of symmetric functions`,
`   `,
`CALLING SEQUENCE:  itensor(f,g);    itensor(f,g,b1,b2);`,
`                   itensor(f,g,b);  itensor(f,g,b1,b2,b);`,
`   `,
`PARAMETERS:    f,g   = symmetric functions`,
`             b,b1,b2 = (optional) basis names`,
`   `,
`SYNOPSIS:`,
`  Let f and g be symmetric functions that are homogeneous of degree n. Via`,
`  the characteristic map (see 'sf2char') there are virtual characters of`,
`  the symmetric group S_n corresponding to f and g. The tensor (i.e.,`,
`  pointwise) product of these two characters is therefore also a virtual`,
`  character corresponding to some symmetric function, the "inner tensor`,
`  product" (a.k.a. Kronecker product) of f and g. This product is linear`,
`  in both arguments, and is zero if f and g are of unequal degrees.`,
`   `,
`  itensor(f,g) returns the inner tensor product of the symmetric functions`,
`  f and g. The output is collected with respect to the power-sums and`,
`  'normal' is applied to the coefficients. If there is an odd number of`,
`  arguments (3 or 5), with the last being a basis name b, then the output`,
`  is expressed in terms of the basis b. If there are 4 or 5 arguments,`,
`  with the third and fourth being basis names b1 and b2, then f and g are`,
`  assumed to be expressed solely in terms of the bases b1 and b2,`,
`  respectively. In particular, if (say) b1 is not one of the predefined`,
`  bases, this requires f to be linear in elements of the basis b1.`,
`   `,
`EXAMPLES:`,
`  itensor(s[2,1],s[3,2]);        yields                  0`,
`  itensor(s[2,1],s[2,1],s);      yields         s[3]+s[2,1]+s[1,1,1]`,
`  itensor(s[2,2],h2^2,s,h);      yields           1/2*p2^2+1/2*p1^4`,
`  itensor(e5,s[3,2],e,s,s);      yields               s[2,2,1]`,
`   `,
`SEE ALSO:  char2sf, sf2char, plethysm`,
NULL):

if `+`(0)=0 then # Maple V.4 or later
  print(INTERFACE_HELP(insert, topic=`SF/itensor`,
  helpfile=HomeLib, text=`SF/text/itensor`))
elif ceil(0)=0 then # Maple V.2 or V.3
  `help/SF/text/itensor`:=`SF/text/itensor`:
  save `help/SF/text/itensor`, cat(HomeLib,`/help/SF/text/itensor.m`);
fi:
