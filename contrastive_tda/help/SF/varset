`SF/text/varset` := TEXT(
`   `,
`FUNCTION:  varset - variable set of a symmetric function`,
`   `,
`CALLING SEQUENCE:  varset(f);  varset(f,B);`,
`   `,
`PARAMETERS:  f = a symmetric function`,
`             B = (optional) a name, or a list or set of names`,
`   `,
`SYNOPSIS:`,
`  If f is a symmetric function, varset(f) returns a table whose entries`,
`  describe the set of basic symmetric functions that occur syntactically`,
`  in f. There will be a table entry corresponding to each member of `,
`  ``SF/Bases``, the global variable that specifies the known bases.`,
`   `,
`  If 'b[]' is a name of type 'indexed' in ``SF/Bases``, there will be a table`,
`  entry indexed by 'b' consisting of a list of all partitions lambda such`,
`  that b[lambda] appears in f.`,
`   `,
`  If 'b' is a name of type 'string' in ``SF/Bases``, there will be a table`,
`  entry indexed by 'b' equal to the largest integer d such that b.d appears`,
`  in f (or 0, if b1,b2,... do not occur in f).`,
`   `,
`  If B is any list or set of basis names (of string or indexed type),`,
`  varset(f,B) does the same, using B in place of ``SF/Bases``.`,
`   `,
`  If B is any basis name of type 'string' or 'indexed', varset(f,B) returns`,
`  only the table entry corresponding to the basis B (either an integer or`,
`  a list), not the table itself. `,
`   `,
`  There are no restrictions on basis names of indexed type, but basis names`,
`  of string type must consist of a single letter.`,
`   `,
`EXAMPLES:`,
`  varset((p1+p3)^3+p7^2,p);                yields           7`,
`  f:=s[3,2]*s[2]*m[2,1]+h3*h1^2;`,
`  varset(f);                               yields `,
`                                  table([(e)=0,(h)=3,(p)=0,(s)=[[3,2], [2]]])`,
`  T:=varset(f,{h,m[]}): T[m];              yields        [[2,1]]`,
`   `,
`SEE ALSO:  stdeg`,
NULL):

if `+`(0)=0 then # Maple V.4 or later
  print(INTERFACE_HELP(insert, topic=`SF/varset`,
  helpfile=HomeLib, text=`SF/text/varset`))
elif ceil(0)=0 then # Maple V.2 or V.3
  `help/SF/text/varset`:=`SF/text/varset`:
  save `help/SF/text/varset`, cat(HomeLib,`/help/SF/text/varset.m`);
fi:
