`SF/text/dominate` := TEXT(
`   `,
`FUNCTION:  dominate - list/test partitions dominated by another partition`,
`   `,
`CALLING SEQUENCE:  dominate(mu);`,
`                   dominate(mu,n);`,
`                   dominate(mu,nu);`,
`   `,
`PARAMETERS:  mu,nu = partitions`,
`               n   = (optional) a nonnegative integer`,
`   `,
`SYNOPSIS:`,
`  If mu and nu are partitions, then mu dominates nu if`,
`  mu[1]+...+mu[i] >= nu[1]+...+nu[i]  for i=1,2,...`,
`   `,
`  If mu is a partition of m, dominate(mu) returns a list consisting of all`,
`  partitions of m dominated by mu. The first listed partition will be mu,`,
`  but the remaining partitions will not be in a canonical order.`,
`   `,
`  If n is a nonnegative integer, then dominate(mu,n) does the same, but`,
`  returns only partitions with at most n parts.`,
`   `,
`  If nu is a second partition, then dominate(mu,nu) returns true or false`,
`  according to whether mu dominates nu.`,
`   `,
`EXAMPLES:`,
`  dominate([2,2]);             yields       [[2,2], [2,1,1], [1,1,1,1]]`,
`  dominate([3,2,1],[2,2,2]);   yields                 true`,
`  pl:=dominate([3,2,1],4);     yields`,
`                                     [[3,2,1], [2,2,2], [3,1,1,1], [2,2,1,1]]`,
`  sort(pl,dominate);           yields`,
`                                     [[3,2,1], [3,1,1,1], [2,2,2], [2,2,1,1]]`,
`   `,
`SEE ALSO:  Par, conjugate, subPar, nextPar`,
NULL):

if `+`(0)=0 then # Maple V.4 or later
  print(INTERFACE_HELP(insert, topic=`SF/dominate`,
  helpfile=HomeLib, text=`SF/text/dominate`))
elif ceil(0)=0 then # Maple V.2 or V.3
  `help/SF/text/dominate`:=`SF/text/dominate`:
  save `help/SF/text/dominate`, cat(HomeLib,`/help/SF/text/dominate.m`);
fi:
