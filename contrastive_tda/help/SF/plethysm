`SF/text/plethysm` := TEXT(
`   `,
`FUNCTION:  plethysm - plethysm of symmetric functions`,
`   `,
`CALLING SEQUENCE:  plethysm(f,g);    plethysm(f,g,b1,b2);`,
`                   plethysm(f,g,b);  plethysm(f,g,b1,b2,b);`,
`   `,
`PARAMETERS:    f,g    =  symmetric functions`,
`             b,b1,b2  =  (optional) basis names`,
`   `,
`SYNOPSIS:`,
`  The plethysm operation on symmetric functions f and g is the (unique)`,
`  binary operation f[g] satisfying the following properties:`,
`   `,
`    (1) (f+g)[h] = f[h]+g[h],     (2) (f*g)[h] = (f[h])*(g[h]),`,
`    (3)   p.j[f] = f[p.j],        (4) p.i[p.j] = p.(i*j),`,
`   `,
`  where p.i denotes the i-th power-sum symmetric function.`,
`   `,
`  If f and g are characters of representations of general linear groups,`,
`  then f[g] is the character of the composition of the representations. If`,
`  f and g correspond to symmetric group characters (via the characteristic`,
`  map--see 'sf2char'), then the plethysm f[g] corresponds to the induction`,
`  of a character of the wreath product of two symmetric groups.`,
`   `,
`  plethysm(f,g) returns the plethysm of symmetric functions f and g.`,
`  The output is collected with respect to the power-sums and 'normal' is`,
`  applied to the coefficients.`,
`   `,
`  If there is an odd number of arguments (3 or 5), with the last being a`,
`  basis name b, then the output is expressed in terms of the basis b.`,
`  If there are 4 or 5 arguments, with the the third and fourth being basis`,
`  names b1 and b2, then f and g are assumed to be expressed solely in terms`,
`  of the bases b1 and b2, respectively. In particular, if (say) b1 is not`,
`  one of the predefined bases, this requires f to be linear in the elements`,
`  of the basis b1.`,
`   `,
`  Reference:`,
`    I. Macdonald, "Symmetric Functions and Hall polynomials", Section I.8.`,
`   `,
`EXAMPLES:`,
`  plethysm(h3,h2,s);              yields       s[6]+s[4,2]+s[2,2,2]`,
`  plethysm(p3,s[2,1]);            yields         1/3*p3^3-1/3*p9`,
`  plethysm(p3,s[2,1],p,s);        yields         1/3*p3^3-1/3*p9`,
`  plethysm(e3,e2,e,e,e);          yields   e4*e1^2-e1*e5-2*e4*e2+e6+e3^2`,
`   `,
`SEE ALSO:  char2sf, evalsf, itensor, sf2char`,
NULL):

if `+`(0)=0 then # Maple V.4 or later
  print(INTERFACE_HELP(insert, topic=`SF/plethysm`,
  helpfile=HomeLib, text=`SF/text/plethysm`))
elif ceil(0)=0 then # Maple V.2 or V.3
  `help/SF/text/plethysm`:=`SF/text/plethysm`:
  save `help/SF/text/plethysm`, cat(HomeLib,`/help/SF/text/plethysm.m`);
fi:
